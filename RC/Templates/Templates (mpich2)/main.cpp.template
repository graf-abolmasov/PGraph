#include "tpodata.h"
#include "memman.h"
#include "unistd.h"
#include <stdlib.h>
#include <stddef.h>
#include <time.h>

int <#graphname>(TPOData *D);
int main(int argc, char *argv[])
{
#ifdef PARALLEL
	MPI_Init(&argc, &argv);
	
	double start = MPI_Wtime();
	
	MPI_Comm_rank(MPI_COMM_WORLD, &myProcNum);
	MPI_Comm_size(MPI_COMM_WORLD, &totalProc);
	//printf("totalProc = %d\n", totalProc);
	
	//Для общения с менеждером памяти
    int          len[4] = { 1, 1, 1, 1 };
    MPI_Aint     pos[4] = { offsetof(MemoryPacket,id), offsetof(MemoryPacket,offset),
                        offsetof(MemoryPacket,count), sizeof(MemoryPacket) };
    MPI_Datatype typ[4] = { MPI_INT, MPI_LONG, MPI_LONG, MPI_UB };

    MPI_Type_struct( 4, len, pos, typ, &memoryPacketDatatype );
    MPI_Type_commit( &memoryPacketDatatype );
	
	TPOData D(myProcNum);
	
	MPI_Barrier (MPI_COMM_WORLD);
	
	//Запускаем диспетчер памяти	
	if (myProcNum == 0) 
		memman(&D);
		
#endif
#ifndef PARALLEL
	TPOData D(0);
#endif

    <#graphname>(&D);

    return 0;
}
